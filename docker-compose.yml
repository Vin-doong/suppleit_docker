version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    command: --lower-case-table-names=1 --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: abcd1234
      MYSQL_DATABASE: suppleit
    ports:
      - "3307:3306"
    volumes:
      - ./db/suppleit.sql:/docker-entrypoint-initdb.d/suppleit.sql
      - ./custom.cnf:/etc/mysql/conf.d/custom.cnf
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pabcd1234"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: spring-backend
    restart: on-failure
    # 포트 노출은 내부 네트워크에서만 필요 (외부로는 노출 안 함)
    expose:
      - "8000"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/suppleit?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=abcd1234
      - FLASK_API_URL=http://flask-server:5000/
    depends_on:
      db:
        condition: service_healthy
      flask:
        condition: service_started
    networks:
      - app-network

  flask:
    build: ./flask
    container_name: flask-server
    restart: on-failure
    # 포트 노출은 내부 네트워크에서만 필요 (외부로는 노출 안 함)
    expose:
      - "5000"
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  frontend:
    build: ./frontend
    container_name: react-frontend
    restart: on-failure
    # 포트 노출은 내부 네트워크에서만 필요 (외부로는 노출 안 함)
    expose:
      - "3000"
    # 환경 변수는 Nginx 리버스 프록시를 통해 접근하도록 변경
    environment:
      - REACT_APP_API_BASE_URL=/api
    depends_on:
      - backend
      - flask
    networks:
      - app-network

  # 새로 추가: Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"  # 외부로는 80 포트만 노출
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
      - flask
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: