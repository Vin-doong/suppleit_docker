{/* 주간 복용 계획 */}
          <div id="weekly" className="bg-white shadow rounded-lg p-5 mb-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">📅 주간 복용 계획</h2>
            <div className="grid grid-cols-1 sm:grid-cols-7 gap-2 text-center">
            {Array.from({ length: 7 }).map((_, i) => {
              const day = new Date();
              day.setDate(day.getDate() - day.getDay() + i + 1);
              const dayName = day.toLocaleDateString('en-US', { weekday: 'long' });
              const status = weeklyPlan[dayName]?.status || '미완료';
              
              // 요일 인덱스: 0(일요일), 6(토요일)
              const isWeekend = i === 0 || i === 6;
              
              // custom 스타일 (기본 색상으로 통일하거나 별도 처리)
              const customStyle = {
                backgroundColor: isWeekend ? '#fff' : '#fff', // 모든 요일 동일한 배경색
                border: '1px solid #e2e8f0',
                borderRadius: '0.5rem'
              };
              
              return (
                <div 
                  key={i} 
                  className="p-3 border rounded-lg cursor-pointer" 
                  style={customStyle}
                >
                  {/* 요일 색상만 구분 */}
                  <p className={`text-sm font-semibold ${isWeekend ? 'text-red-500' : 'text-gray-900'}`}>
                    {day.toLocaleDateString('ko-KR', { weekday: 'short' })}
                  </p>
                  <p className="text-xs text-gray-600">{day.toLocaleDateString()}</p>
                  <ul className="mt-1 text-xs text-gray-700">
                    {weeklyPlan[dayName]?.items?.map((item, j) => (
                      <li key={j}>✅ {item}</li>
                    )) || <li>❌ 없음</li>}
                  </ul>
                </div>
              );
            })}
            </div>
          </div>